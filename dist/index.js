// Generated by LiveScript 1.5.0
(function(){
  var DateTime, execSync, end, days, name, opt;
  DateTime = require('luxon').DateTime;
  execSync = require('child_process').execSync;
  import$(global, require('prelude-ls'));
  end = DateTime.local();
  days = process.argv[2] || 30;
  name = execSync("git config user.name").toString().trim();
  opt = {
    suppressMilliseconds: true
  };
  each(function(date){
    var this$ = this;
    return function(arg$){
      var add, remove;
      add = arg$.add, remove = arg$.remove;
      if (!(add || remove)) {
        return;
      }
      return console.log(date.toFormat("yyyy-LL-dd") + ":", (add + remove) + " (+" + add + " -" + remove + ")");
    }(
    fold(function(s, a){
      var add, remove;
      add = s.add, remove = s.remove;
      return s.add = add + abs(a[0]), s.remove = remove + abs(a[1]), s;
    }, {
      add: 0,
      remove: 0
    })(
    reject(function(it){
      return /package\-lock/.exec(it[2]);
    })(
    filter(function(it){
      return it.length > 2;
    })(
    map(split("\t"))(
    split("\n")(
    function(it){
      return it.toString();
    }(
    execSync(
    "git log --numstat --pretty=\"%H\" --author='" + name + "' --since='" + date.startOf('day').toISO(opt) + "' --until='" + date.endOf('day').toISO(opt) + "' --no-merges"))))))));
  })(
  map(function(it){
    return end.minus({
      days: it
    });
  })(
  (function(){
    var i$, to$, results$ = [];
    for (i$ = 0, to$ = days; i$ < to$; ++i$) {
      results$.push(i$);
    }
    return results$;
  }())));
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
